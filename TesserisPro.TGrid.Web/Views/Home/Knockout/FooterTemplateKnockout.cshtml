@{
    Layout = null;
}

<!DOCTYPE html>

<html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>Footer template knockout</title>
        <link rel="stylesheet" type="text/css" href="~/Content/Grid.css">
        <link rel="stylesheet" type="text/css" href="~/Content/iframe.css">
   
        <script src="~/Scripts/iframe/jquery-1.11.0.min.js"></script>
        <script src="~/Scripts/iframe/knockout-3.0.0.js"></script>

         <script src="~/Scripts/iframe/tgrid-array-items-provider-min.js" type="text/javascript"></script>
        <script src="~/Scripts/iframe/tgrid-min.js" type="text/javascript"></script>
        <script src="~/Scripts/iframe/tgrid-knockout-min.js" type="text/javascript"></script>
    </head>
    <body>    
        <div>
            <div id="test-knockout" data-bind="tgrid: { provider: itemsProvider, enablePaging: true, pageSize: 15, pageSlide: 3}">
                <script type="text/html">
                    <column data-g-member="Name">
                    </column>
                    <column data-g-member="Surname"> 
                    </column>
                    <column data-g-member="Age">   
                    </column>
                     <footer>
                        <div class ="footer">
                            <div class="tgrid-pagination" style="display:inline-block; float: left;">
                                <span class='tgrid-page-number' data-bind="click: function () { goToFirstPage(); }, clickBubble: false, css: { hidden: (currentPage() - 4)<= 0 }">1</span>
                                <span class='tgrid-page-number' data-bind="click: function () { goToPreviousPagesBlock(); }, clickBubble: false, css: { hidden: (currentPage() - 4)<= 0 }">...</span>
                                <span class='tgrid-page-number'  data-bind="click: function () { changePage(currentPage() - 3); }, clickBubble: false, text: currentPage() - 3, css: { hidden: (currentPage() - 3) <= 0 }"></span>
                                <span class='tgrid-page-number' data-bind="click: function () { changePage(currentPage() - 2); }, clickBubble: false, text: currentPage() - 2, css: { hidden: (currentPage() - 2) <= 0 }"></span>
                                <span class='tgrid-page-number' data-bind="click: function () { changePage(currentPage() - 1); }, clickBubble: false, text: currentPage() - 1, css: { hidden: (currentPage() - 1) <= 0 }"></span>
                                <span class='tgrid-page-current' data-bind="text: currentPage"></span>
                                <span class='tgrid-page-number' data-bind="click: function () { changePage(currentPage() + 1); }, clickBubble: false, text: currentPage() + 1, css: { hidden: (currentPage() + 1) > totalPages() }"></span>
                                <span class='tgrid-page-number' data-bind="click: function () { changePage(currentPage() + 2); }, clickBubble: false, text: currentPage() + 2, css: { hidden: (currentPage() + 2) > totalPages() }"></span>
                                <span class='tgrid-page-number' data-bind="click: function () { changePage(currentPage() + 3); }, clickBubble: false, text: currentPage() + 3, css: { hidden: (currentPage() + 3) > totalPages() }"></span>
                                <span class='tgrid-page-number' data-bind="click: function () { goToNextPagesBlock(); }, clickBubble: false, css: { hidden: (currentPage() + 4) > totalPages() }" >...</span>
                                <span class='tgrid-page-number' data-bind="text:totalPages, click: function () { goToLastPage(); }, clickBubble: false, css: { hidden: (currentPage() + 4)> totalPages() }"></span>
                            </div>
                            <span style="float:right; position:absolute; right:3px">
                                To page: <input class="tgrid-choose-page-input" data-bind="value: $root.page"/>
                                of <span data-bind="text: totalPages"> </span>
                                <span class="tgrid-change-page-button" data-bind="click: function() {changePage($root.page);} , clickBubble: false">
                                    Go
                                </span>
                            </span>
                        </div>
                    </footer>  
                </script>
            </div>
            <script type="text/javascript">
                var items = [];
         
                var getRandomInt = function getRandomInt(min, max) {
                    return Math.floor(Math.random() * (max - min + 1) + min);
                }

                var generateRandomInt = getRandomInt;
                (function (generateRandomInt, items) {
                    var names = ['Angela', 'Bella', 'Chris', 'Donna', 'Elizabeth', 'Fiona', 'George', 'Henry', 'Inga', 'Julia', 'Ken', 'Laurence', "John", "Sharilyn", "Matthew", "Jasmine", "Ashley", "Christiana",
                    "Cathrine", "Alison", "Nicole", "Theron", "Robert", "Larry", "Tina", "Nelson", "Ted", "William"];
                    var surnames = ['Smith', 'Jones', 'Taylor', 'Williams', 'Brown', 'Davies', 'Evans', 'Wilson', 'Thomas', 'Roberts', 'Johnson', "Figgins","Seidel","Holz","Newlin", "Swanson", "Ronan", "Lewis", 
                        'Carter', 'Collins', "Thrush", 'Murphy', 'Turner', 'Ham'];
                    var path = document.getElementById("url") != null  ? document.getElementById("url").value : "/";
                    for (var i = 0; i < 2000; i++) {
                        items.push({
                            Name: names[generateRandomInt(0, names.length - 1)],
                            Surname: surnames[generateRandomInt(0, surnames.length - 1)],
                            Age: generateRandomInt(20, 60),
                        });
                    }
                })(generateRandomInt, items);

                function vm() {
                    var self = this;
                    self.page = ko.observable("");
                    self.itemsProvider = new TesserisPro.TGrid.ArrayItemsProvider(items);
                };

                $(function () {
                    ko.applyBindings(new vm());
                });
            </script>
        </div>
    </body>
</html>
